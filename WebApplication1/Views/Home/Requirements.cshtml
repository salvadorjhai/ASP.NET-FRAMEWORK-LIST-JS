
@{
    ViewBag.Title = "Requirements";

    List<WebApplication1.Models.MemberModelAttachments> list = new List<WebApplication1.Models.MemberModelAttachments>();

    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 1, memberid = 1, title = "Request Letter", description = "dear charo...." });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 2, memberid = 1, title = "Electrical Plan", description = "x y z" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 3, memberid = 1, title = "Electrical Permit", description = "permit no 123 series of 2006" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 4, memberid = 1, title = "Fire safety Inspection Certificate", description = "ou, safe yan" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 5, memberid = 1, title = "Orientation / Seminar", description = "August 21 2024" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });
    list.Add(new WebApplication1.Models.MemberModelAttachments() { id = 6, memberid = 1, title = "1 x 1 ID Picture", description = "smile" });

    var jo = Newtonsoft.Json.JsonConvert.SerializeObject(list);

}

<h2>Requirements</h2>

@* parent, required id *@
<div class="container" id="listjscontainer">

    @* Searching *@
    <div class="row">
        <div class="col-auto">
            <input class="search form-control" placeholder="normal search ... " />
        </div>
    </div>

    @* actual list , required list class *@
    <div class="row list">

        @for (int i = 0; i < list.Count; i++)
        {
            <div class="col-4 mt-2 mb-2">
                <div class="card">
                    <svg class="bd-placeholder-img card-img-top" width="100%" height="180" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Image cap" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#868e96"></rect></svg>
                    <div class="card-body">
                        <h5 class="card-title title">@list[i].title</h5>
                        <p class="card-text description">@list[i].description</p>
                        <a href="#" class="btn btn-primary" data-id="@list[i].id">Go somewhere</a>
                    </div>
                </div>
            </div>
        }

    </div>

    @* Pagination and Page Info *@
    <div class="row">
        <div class="col">
            <div id="data-list-pageinfo"></div>
        </div>
        <div class="col-auto align-items-end">
            <div class="row">
                <ul class="pagination col-auto"> <li class="page-item"> <a class="page-link data-list-pagination-prev" href="#">Previous</a>  </ul>
                <ul class="pagination data-list-pagination col-auto"></ul>
                <ul class="pagination col-auto"> <li class="page-item"> <a class="page-link data-list-pagination-next" href="#">Next</a></li>  </ul>
            </div>     
        </div>
    </div>

</div>


@section scripts{
    <script>
        $(document).ready(function () {
            initDataList();
        });

        function initDataList() {
            var options = {
                valueNames: [
                    'title', // from class
                    'description', // from class
                    { data: ['id'] } // from data-id
                ],
                page: 6,
                pagination: {
                    paginationClass: "data-list-pagination",
                    name: "data-list-pagination",
                    item: function (values) {
                        return `<li class='page-item'><a class='page-link' href='#'>${values.page}</a></li>`;
                    },
                    innerWindow: 2,
                    outerWindow: 2,
                    left: 2,
                    right: 2,
                },
            };

            // parent
            var list = new List('listjscontainer', options);

            list.on('updated', function (x) {
                updateListControls();

            }).on('searchStart', function () {

            }).on('searchComplete', function () {

            }).on('filterStart', function () {

            }).on('filterComplete', function () {

            }).on('sortStart', function () {

            }).on('sortComplete', function () {

            });

            var paginationButtonNext = document.querySelector('.data-list-pagination-next');
            var paginationButtonPrev = document.querySelector('.data-list-pagination-prev');
            var paginationInfo = document.querySelector('#data-list-pageinfo');

            var totalItem = list.items.length;
            var itemsPerPage = list.page;
            var pageQuantity = Math.ceil(totalItem / itemsPerPage);
            var numberOfcurrentItems = list.visibleItems.length;
            var pageCount = 1;

            // enable/disable button
            function togglePaginationButtonDisable(button, disabled) {
                var updatedButton = button;
                updatedButton.disabled = disabled;
                updatedButton.classList[disabled ? 'add' : 'remove']('disabled');
            };

            // updating page info
            function updateListControls() {
                if (paginationInfo) {
                    if (list.searched) {
                        var filteredRecords = list.matchingItems.length;
                        //paginationInfo.textContent = `Page ${pageCount} of ${Math.ceil(pageQuantity)} (found ${filteredRecords} out of ${totalItem} records.)`;
                        paginationInfo.textContent = `Found ${list.i} to ${filteredRecords} of ${totalItem} records.`;
                        if (filteredRecords == 0) {
                            paginationInfo.textContent = `No records found.`;
                        }
                        togglePaginationButtonDisable(paginationButtonNext, filteredRecords < totalItem);
                        togglePaginationButtonDisable(paginationButtonPrev, filteredRecords < totalItem);
                        return;
                    } else {
                        paginationInfo.textContent = `Page ${pageCount} of ${Math.ceil(pageQuantity)} - ${totalItem} records.`;
                    }
                }

                // blocking
                paginationButtonPrev && togglePaginationButtonDisable(paginationButtonPrev, pageCount === 1);
                paginationButtonNext && togglePaginationButtonDisable(paginationButtonNext, pageCount === pageQuantity);
                if (pageCount > 1 && pageCount < pageQuantity) {
                    togglePaginationButtonDisable(paginationButtonNext, false);
                    togglePaginationButtonDisable(paginationButtonPrev, false);
                }

            }

            // 
            updateListControls()

            // paginatation next
            if (paginationButtonNext) {
                paginationButtonNext.addEventListener('click', function (e) {
                    e.preventDefault();
                    pageCount += 1;
                    var nextInitialIndex = list.i + itemsPerPage;
                    nextInitialIndex <= list.size() && list.show(nextInitialIndex, itemsPerPage);
                    numberOfcurrentItems += list.visibleItems.length;
                    updateListControls();
                });
            }

            // paginatation previous
            if (paginationButtonPrev) {
                paginationButtonPrev.addEventListener('click', function (e) {
                    e.preventDefault();
                    pageCount -= 1;
                    numberOfcurrentItems -= list.visibleItems.length;
                    var prevItem = list.i - itemsPerPage;
                    prevItem > 0 && list.show(prevItem, itemsPerPage);
                    updateListControls();
                });
            }

            // pagination number (main)
            if (options.pagination) {
                document.querySelector('.data-list-pagination').addEventListener('click', function (e) {
                    if (e.target.classList[0] === 'page-link') {
                        pageCount = Number(e.target.innerText);
                        updateListControls();
                    }
                });
            }

            return list;
        }

    </script>
}
